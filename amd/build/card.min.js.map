{"version":3,"file":"card.min.js","sources":["../src/card.js"],"sourcesContent":["import {BaseComponent, DragDrop} from 'core/reactive';\nimport selectors from 'mod_kanban/selectors';\nimport exporter from 'mod_kanban/exporter';\nimport {saveCancel} from 'core/notification';\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport {exception as displayException} from 'core/notification';\nimport Templates from 'core/templates';\n\n/**\n * Component representing a card in a kanban board.\n */\nexport default class extends BaseComponent {\n    /**\n     * For relative time helper.\n     */\n    _units = {\n        year: 24 * 60 * 60 * 1000 * 365,\n        month: 24 * 60 * 60 * 1000 * 365 / 12,\n        day: 24 * 60 * 60 * 1000,\n        hour: 60 * 60 * 1000,\n        minute: 60 * 1000,\n        second: 1000\n    };\n\n    /**\n     * Function to initialize component, called by mustache template.\n     * @param {*} target The id of the HTMLElement to attach to\n     * @returns {BaseComponent} New component attached to the HTMLElement represented by target\n     */\n    static init(target) {\n        let element = document.getElementById(target);\n        return new this({\n            element: element,\n        });\n    }\n\n    /**\n     * Called after the component was created.\n     */\n    create() {\n        this.id = this.element.dataset.id;\n    }\n\n    /**\n     * Watchers for this component.\n     * @returns {array} All watchers for this component\n     */\n    getWatchers() {\n        return [\n            {watch: `cards[${this.id}]:updated`, handler: this._cardUpdated},\n            {watch: `cards[${this.id}]:deleted`, handler: this._cardDeleted},\n        ];\n    }\n\n    /**\n     * Called once when state is ready, attaching event listeners and initializing drag and drop.\n     * @param {*} state The initial state\n     */\n    stateReady(state) {\n        let lang = 'en';\n        if (state.board.lang !== undefined) {\n            lang = state.board.lang;\n        }\n        this.rtf = new Intl.RelativeTimeFormat(lang, {numeric: 'auto'});\n\n        this.addEventListener(\n            this.getElement(selectors.DELETECARD, this.id),\n            'click',\n            this._removeConfirm\n        );\n        this.addEventListener(\n            this.getElement(selectors.ADDCARD, this.id),\n            'click',\n            this._addCard\n        );\n        this.addEventListener(\n            this.getElement(selectors.COMPLETE, this.id),\n            'click',\n            this._completeCard\n        );\n        this.addEventListener(\n            this.getElement(selectors.UNCOMPLETE, this.id),\n            'click',\n            this._uncompleteCard\n        );\n        this.addEventListener(\n            this.getElement(selectors.ASSIGNSELF, this.id),\n            'click',\n            this._assignSelf\n        );\n        this.addEventListener(\n            this.getElement(selectors.UNASSIGNSELF, this.id),\n            'click',\n            this._unassignSelf\n        );\n        this.addEventListener(\n            this.getElement(selectors.EDITDETAILS, this.id),\n            'click',\n            this._editDetails\n        );\n        this.draggable = false;\n        this.dragdrop = new DragDrop(this);\n        this.checkDragging(state);\n        this.boardid = state.board.id;\n        this.cmid = state.board.cmid;\n        this._dueDateFormat();\n    }\n\n    /**\n     * Display confirmation modal for deleting a card.\n     * @param {*} event\n     */\n    _removeConfirm(event) {\n        saveCancel(\n            getString('deletecard', 'mod_kanban'),\n            getString('deletecardconfirm', 'mod_kanban'),\n            getString('delete', 'core'),\n            () => {\n                this._removeCard(event);\n            }\n        );\n    }\n\n    /**\n     * Dispatch event to assign the current user to the card.\n     * @param {*} event\n     */\n    _assignSelf(event) {\n        let target = event.target.closest(selectors.ASSIGNSELF);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('assignUser', data.id);\n    }\n\n    /**\n     * Dispatch event to add a card after this card.\n     * @param {*} event\n     */\n    _addCard(event) {\n        let target = event.target.closest(selectors.ADDCARD);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('addCard', data.columnid, data.id);\n    }\n\n    /**\n     * Update this card.\n     * @param {*} param0\n     */\n    async _cardUpdated({element}) {\n        const card = this.getElement();\n        if (card.dataset.columnid != element.kanban_column) {\n            const col = document.querySelector(selectors.COLUMNINNER + '[data-id=\"' + element.kanban_column + '\"]');\n            col.appendChild(card);\n            this.getElement(selectors.ADDCARD, this.id).setAttribute('data-columnid', element.kanban_column);\n            card.setAttribute('data-columnid', element.kanban_column);\n        }\n        const assignees = this.getElement(selectors.ASSIGNEES, this.id);\n        const assignedUsers = this.getElements(selectors.ASSIGNEDUSER, this.id);\n        const userids = [...assignedUsers].map(v => {\n            return v.dataset.userid;\n        });\n        const additional = element.assignees.filter(x => !userids.includes(x));\n        if (assignedUsers !== null) {\n            assignedUsers.forEach(assignedUser => {\n                if (!element.assignees.includes(assignedUser.dataset.userid)) {\n                    assignedUser.parentNode.removeChild(assignedUser);\n                }\n            });\n        }\n        if (element.assignees.length > 0) {\n            additional.forEach(async user => {\n                let placeholder = document.createElement('div');\n                let userdata = this.reactive.state.users.get(user);\n                let data = Object.assign({cardid: element.id}, userdata);\n                data = Object.assign(data, exporter.exportCapabilities(this.reactive.state));\n                placeholder.setAttribute('data-id', element.id);\n                assignees.appendChild(placeholder);\n                const newcomponent = await this.renderComponent(placeholder, 'mod_kanban/user', data);\n                const newelement = newcomponent.getElement();\n                assignees.replaceChild(newelement, placeholder);\n            });\n        }\n        if (element.selfassigned !== undefined) {\n            if (element.selfassigned) {\n                this.getElement(selectors.ASSIGNSELF, this.id).parentNode.classList.add('hidden');\n                this.getElement(selectors.UNASSIGNSELF, this.id).parentNode.classList.remove('hidden');\n                if (this.reactive.state.capabilities.get('moveassignedcards')) {\n                        this.getElement(selectors.UNCOMPLETE).parentNode.classList.remove('mod_kanban_hidden');\n                        this.getElement(selectors.COMPLETE).parentNode.classList.remove('mod_kanban_hidden');\n                }\n            } else {\n                this.getElement(selectors.ASSIGNSELF, this.id).parentNode.classList.remove('hidden');\n                this.getElement(selectors.UNASSIGNSELF, this.id).parentNode.classList.add('hidden');\n                if (this.reactive.state.capabilities.get('moveallcards').value == false) {\n                    this.getElement(selectors.UNCOMPLETE).parentNode.classList.add('mod_kanban_hidden');\n                    this.getElement(selectors.COMPLETE).parentNode.classList.add('mod_kanban_hidden');\n                }\n            }\n        }\n        if (element.completed !== undefined) {\n            if (element.completed == 1) {\n                this.getElement(selectors.COMPLETIONSTATE).classList.remove('hidden');\n                this.getElement(selectors.UNCOMPLETE).parentNode.classList.remove('hidden');\n                this.getElement(selectors.COMPLETE).parentNode.classList.add('hidden');\n                this.getElement(selectors.INPLACEEDITABLE).removeAttribute('data-inplaceeditable');\n                this.getElement(selectors.DUEDATE).classList.add('hidden');\n            } else {\n                this.getElement(selectors.COMPLETIONSTATE).classList.add('hidden');\n                this.getElement(selectors.UNCOMPLETE).parentNode.classList.add('hidden');\n                this.getElement(selectors.COMPLETE).parentNode.classList.remove('hidden');\n                this.getElement(selectors.INPLACEEDITABLE).setAttribute('data-inplaceeditable', '1');\n                this.getElement(selectors.DUEDATE).classList.remove('hidden');\n            }\n        }\n        if (element.title !== undefined) {\n            this.getElement(selectors.INPLACEEDITABLE).setAttribute('data-value', element.title);\n            this.getElement(selectors.INPLACEEDITABLE).querySelector('a').innerHTML = element.title;\n            this.getElement(selectors.DESCRIPTIONMODALTITLE).innerHTML = element.title;\n        }\n        if (element.description !== undefined) {\n            this.getElement(selectors.DESCRIPTIONMODALBODY).innerHTML = element.description;\n        }\n        if (element.attachments !== undefined) {\n            Templates.renderForPromise('mod_kanban/attachmentitems', {attachments: element.attachments}).then(({html}) => {\n                this.getElement(selectors.DESCRIPTIONMODALFOOTER).innerHTML = html;\n                return true;\n            }).catch((error) => displayException(error));\n        }\n        if (element.hasdescription !== undefined || element.hasattachment !== undefined) {\n            if (element.hasdescription || element.hasattachment) {\n                this.getElement(selectors.DESCRIPTIONTOGGLE).classList.remove('hidden');\n            } else {\n                this.getElement(selectors.DESCRIPTIONTOGGLE).classList.add('hidden');\n            }\n        }\n        if (element.duedate !== undefined) {\n            this.getElement(selectors.DUEDATE).setAttribute('data-date', element.duedate);\n            this._dueDateFormat();\n        }\n        this.checkDragging();\n    }\n\n    /**\n     * Delete this card.\n     */\n    _cardDeleted() {\n        const el = this.getElement();\n        el.parentNode.removeChild(el);\n        this.destroy();\n    }\n\n    /**\n     * Dispatch event to remove this card.\n     * @param {*} event\n     */\n    _removeCard(event) {\n        let target = event.target.closest(selectors.DELETECARD);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('deleteCard', data.id);\n    }\n\n    /**\n     * Dispatch event to complete this card.\n     * @param {*} event\n     */\n    _completeCard(event) {\n        let target = event.target.closest(selectors.COMPLETE);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('completeCard', data.id);\n    }\n\n    /**\n     * Dispatch event to complete this card.\n     * @param {*} event\n     */\n    _uncompleteCard(event) {\n        let target = event.target.closest(selectors.UNCOMPLETE);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('uncompleteCard', data.id);\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    /**\n     * Get the draggable data of this component.\n     * @returns {object}\n     */\n    getDraggableData() {\n        return {\n            id: this.id,\n            type: 'card',\n        };\n    }\n\n    /**\n     * Conditionally enable / disable dragging.\n     * @param {*} state\n     */\n    checkDragging(state) {\n        if (state === undefined) {\n            state = this.reactive.stateManager.state;\n        }\n        if (state.capabilities.get('moveallcards').value ||\n            (state.capabilities.get('moveassignedcards').value &&\n            state.cards.get(this.id).assignees.includes(state.board.userid))) {\n            this.draggable = true;\n            this.dragdrop.setDraggable(true);\n        } else {\n            this.draggable = false;\n            this.dragdrop.setDraggable(false);\n        }\n    }\n\n    /**\n     * Validate draggable data.\n     * @param {object} dropdata\n     * @returns {boolean} if the data is valid for this drop-zone.\n     */\n    validateDropData(dropdata) {\n        return dropdata?.type == 'card';\n    }\n\n    /**\n     * Executed when a valid dropdata is dropped over the drop-zone.\n     * @param {object} dropdata\n     */\n    drop(dropdata) {\n        if (dropdata.id != this.id) {\n            let newcolumn = this.getElement(selectors.ADDCARD, this.id).dataset.columnid;\n            let aftercard = this.id;\n            this.reactive.dispatch('moveCard', dropdata.id, newcolumn, aftercard);\n        }\n    }\n\n    /**\n     * Dispatch event to unassign the current user.\n     * @param {*} event\n     */\n    _unassignSelf(event) {\n        let target = event.target.closest(selectors.UNASSIGNSELF);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('unassignUser', data.id);\n    }\n\n    /**\n     * Show modal form to edit card details.\n     * @param {*} event\n     */\n    _editDetails(event) {\n        event.preventDefault();\n\n        const modalForm = new ModalForm({\n            formClass: \"mod_kanban\\\\form\\\\edit_card_form\",\n            args: {\n                id: this.id,\n                boardid: this.boardid,\n                cmid: this.cmid\n            },\n            modalConfig: {title: getString('editcard', 'mod_kanban')},\n            returnFocus: this.getElement(),\n        });\n        this.addEventListener(modalForm, modalForm.events.FORM_SUBMITTED, this._updateCard);\n        modalForm.show();\n    }\n\n    /**\n     * Dispatch an event to update card data from the detail modal.\n     * @param {*} event\n     */\n    _updateCard(event) {\n        this.reactive.dispatch('processUpdates', event.detail);\n    }\n\n    /**\n     * Update relative time.\n     * @param {int} timestamp\n     * @returns {string}\n     */\n    updateRelativeTime(timestamp) {\n        let elapsed = new Date(timestamp) - new Date();\n        for (var u in this._units) {\n            if (Math.abs(elapsed) > this._units[u] || u == 'second') {\n                return this.rtf.format(Math.round(elapsed / this._units[u]), u);\n            }\n        }\n        return '';\n    }\n\n    /**\n     * Format due date.\n     */\n    _dueDateFormat() {\n        // Convert timestamp to ms.\n        let duedate = this.getElement(selectors.DUEDATE).dataset.date * 1000;\n        if (duedate > 0) {\n            let element = this.getElement(selectors.DUEDATE);\n            element.innerHTML = this.updateRelativeTime(duedate);\n            if (duedate < new Date().getTime()) {\n                element.classList.add('mod_kanban_overdue');\n            } else {\n                element.classList.remove('mod_kanban_overdue');\n            }\n        } else {\n            this.getElement(selectors.DUEDATE).innerHTML = '';\n        }\n    }\n}\n"],"names":["BaseComponent","year","month","day","hour","minute","second","target","this","element","document","getElementById","create","id","dataset","getWatchers","watch","handler","_cardUpdated","_cardDeleted","stateReady","state","lang","undefined","board","rtf","Intl","RelativeTimeFormat","numeric","addEventListener","getElement","selectors","DELETECARD","_removeConfirm","ADDCARD","_addCard","COMPLETE","_completeCard","UNCOMPLETE","_uncompleteCard","ASSIGNSELF","_assignSelf","UNASSIGNSELF","_unassignSelf","EDITDETAILS","_editDetails","draggable","dragdrop","DragDrop","checkDragging","boardid","cmid","_dueDateFormat","event","_removeCard","closest","data","Object","assign","reactive","dispatch","columnid","card","kanban_column","querySelector","COLUMNINNER","appendChild","setAttribute","assignees","ASSIGNEES","assignedUsers","getElements","ASSIGNEDUSER","userids","map","v","userid","additional","filter","x","includes","forEach","assignedUser","parentNode","removeChild","length","async","placeholder","createElement","userdata","users","get","user","cardid","exporter","exportCapabilities","newelement","renderComponent","replaceChild","selfassigned","classList","add","remove","capabilities","value","completed","COMPLETIONSTATE","INPLACEEDITABLE","removeAttribute","DUEDATE","title","innerHTML","DESCRIPTIONMODALTITLE","description","DESCRIPTIONMODALBODY","attachments","renderForPromise","then","_ref2","html","DESCRIPTIONMODALFOOTER","catch","error","hasdescription","hasattachment","DESCRIPTIONTOGGLE","duedate","el","destroy","unregister","getDraggableData","type","stateManager","cards","setDraggable","validateDropData","dropdata","drop","newcolumn","aftercard","preventDefault","modalForm","ModalForm","formClass","args","modalConfig","returnFocus","events","FORM_SUBMITTED","_updateCard","show","detail","updateRelativeTime","timestamp","elapsed","Date","u","_units","Math","abs","format","round","date","getTime"],"mappings":"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"}