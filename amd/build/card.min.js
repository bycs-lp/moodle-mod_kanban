define("mod_kanban/card",["exports","core/reactive","mod_kanban/selectors","mod_kanban/exporter","core/notification","core_form/modalform","core/str","core/templates"],(function(_exports,_reactive,_selectors,_exporter,_notification,_modalform,_str,_templates){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_selectors=_interopRequireDefault(_selectors),_exporter=_interopRequireDefault(_exporter),_modalform=_interopRequireDefault(_modalform),_templates=_interopRequireDefault(_templates);class _default extends _reactive.BaseComponent{constructor(){var obj,key,value;super(...arguments),value={year:31536e6,month:2628e6,day:864e5,hour:36e5,minute:6e4,second:1e3},(key="_units")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value}static init(target){return new this({element:document.getElementById(target)})}create(){this.id=this.element.dataset.id}getWatchers(){return[{watch:"cards[".concat(this.id,"]:updated"),handler:this._cardUpdated},{watch:"cards[".concat(this.id,"]:deleted"),handler:this._cardDeleted}]}stateReady(state){let lang="en";void 0!==state.board.lang&&(lang=state.board.lang),this.rtf=new Intl.RelativeTimeFormat(lang,{numeric:"auto"}),this.addEventListener(this.getElement(_selectors.default.DELETECARD,this.id),"click",this._removeConfirm),this.addEventListener(this.getElement(_selectors.default.ADDCARD,this.id),"click",this._addCard),this.addEventListener(this.getElement(_selectors.default.COMPLETE,this.id),"click",this._completeCard),this.addEventListener(this.getElement(_selectors.default.UNCOMPLETE,this.id),"click",this._uncompleteCard),this.addEventListener(this.getElement(_selectors.default.ASSIGNSELF,this.id),"click",this._assignSelf),this.addEventListener(this.getElement(_selectors.default.UNASSIGNSELF,this.id),"click",this._unassignSelf),this.addEventListener(this.getElement(_selectors.default.EDITDETAILS,this.id),"click",this._editDetails),this.draggable=!1,this.dragdrop=new _reactive.DragDrop(this),this.checkDragging(state),this.boardid=state.board.id,this.cmid=state.board.cmid,this._dueDateFormat()}_removeConfirm(event){(0,_notification.saveCancel)((0,_str.get_string)("deletecard","mod_kanban"),(0,_str.get_string)("deletecardconfirm","mod_kanban"),(0,_str.get_string)("delete","core"),(()=>{this._removeCard(event)}))}_assignSelf(event){let target=event.target.closest(_selectors.default.ASSIGNSELF),data=Object.assign({},target.dataset);this.reactive.dispatch("assignUser",data.id)}_addCard(event){let target=event.target.closest(_selectors.default.ADDCARD),data=Object.assign({},target.dataset);this.reactive.dispatch("addCard",data.columnid,data.id)}async _cardUpdated(_ref){let{element:element}=_ref;const card=this.getElement();if(card.dataset.columnid!=element.kanban_column){document.querySelector(_selectors.default.COLUMNINNER+'[data-id="'+element.kanban_column+'"]').appendChild(card),this.getElement(_selectors.default.ADDCARD,this.id).setAttribute("data-columnid",element.kanban_column),card.setAttribute("data-columnid",element.kanban_column)}const assignees=this.getElement(_selectors.default.ASSIGNEES,this.id),assignedUsers=this.getElements(_selectors.default.ASSIGNEDUSER,this.id),userids=[...assignedUsers].map((v=>v.dataset.userid)),additional=element.assignees.filter((x=>!userids.includes(x)));null!==assignedUsers&&assignedUsers.forEach((assignedUser=>{element.assignees.includes(assignedUser.dataset.userid)||assignedUser.parentNode.removeChild(assignedUser)})),element.assignees.length>0&&additional.forEach((async user=>{let placeholder=document.createElement("div"),userdata=this.reactive.state.users.get(user),data=Object.assign({cardid:element.id},userdata);data=Object.assign(data,_exporter.default.exportCapabilities(this.reactive.state)),placeholder.setAttribute("data-id",element.id),assignees.appendChild(placeholder);const newelement=(await this.renderComponent(placeholder,"mod_kanban/user",data)).getElement();assignees.replaceChild(newelement,placeholder)})),void 0!==element.selfassigned&&(element.selfassigned?(this.getElement(_selectors.default.ASSIGNSELF,this.id).parentNode.classList.add("hidden"),this.getElement(_selectors.default.UNASSIGNSELF,this.id).parentNode.classList.remove("hidden")):(this.getElement(_selectors.default.ASSIGNSELF,this.id).parentNode.classList.remove("hidden"),this.getElement(_selectors.default.UNASSIGNSELF,this.id).parentNode.classList.add("hidden"))),void 0!==element.completed&&(element.completed?(this.getElement(_selectors.default.COMPLETIONSTATE).classList.remove("hidden"),this.getElement(_selectors.default.UNCOMPLETE).parentNode.classList.remove("hidden"),this.getElement(_selectors.default.COMPLETE).parentNode.classList.add("hidden"),this.getElement(_selectors.default.INPLACEEDITABLE).removeAttribute("data-inplaceeditable"),this.getElement(_selectors.default.DUEDATE).classList.add("hidden")):(this.getElement(_selectors.default.COMPLETIONSTATE).classList.add("hidden"),this.getElement(_selectors.default.UNCOMPLETE).parentNode.classList.add("hidden"),this.getElement(_selectors.default.COMPLETE).parentNode.classList.remove("hidden"),this.getElement(_selectors.default.INPLACEEDITABLE).setAttribute("data-inplaceeditable","1"),this.getElement(_selectors.default.DUEDATE).classList.remove("hidden"))),void 0!==element.title&&(this.getElement(_selectors.default.INPLACEEDITABLE).setAttribute("data-value",element.title),this.getElement(_selectors.default.INPLACEEDITABLE).querySelector("a").innerHTML=element.title,this.getElement(_selectors.default.DESCRIPTIONMODALTITLE).innerHTML=element.title),void 0!==element.description&&(this.getElement(_selectors.default.DESCRIPTIONMODALBODY).innerHTML=element.description),void 0!==element.attachments&&_templates.default.renderForPromise("mod_kanban/attachmentitems",{attachments:element.attachments}).then((_ref2=>{let{html:html}=_ref2;return this.getElement(_selectors.default.DESCRIPTIONMODALFOOTER).innerHTML=html,!0})).catch((error=>(0,_notification.exception)(error))),void 0===element.hasdescription&&void 0===element.hasattachment||(element.hasdescription||element.hasattachment?this.getElement(_selectors.default.DESCRIPTIONTOGGLE).classList.remove("hidden"):this.getElement(_selectors.default.DESCRIPTIONTOGGLE).classList.add("hidden")),void 0!==element.duedate&&(this.getElement(_selectors.default.DUEDATE).setAttribute("data-date",element.duedate),this._dueDateFormat()),this.checkDragging()}_cardDeleted(){const el=this.getElement();el.parentNode.removeChild(el),this.destroy()}_removeCard(event){let target=event.target.closest(_selectors.default.DELETECARD),data=Object.assign({},target.dataset);this.reactive.dispatch("deleteCard",data.id)}_completeCard(event){let target=event.target.closest(_selectors.default.COMPLETE),data=Object.assign({},target.dataset);this.reactive.dispatch("completeCard",data.id)}_uncompleteCard(event){let target=event.target.closest(_selectors.default.UNCOMPLETE),data=Object.assign({},target.dataset);this.reactive.dispatch("uncompleteCard",data.id)}destroy(){void 0!==this.dragdrop&&this.dragdrop.unregister()}getDraggableData(){return{id:this.id,type:"card"}}checkDragging(state){void 0===state&&(state=this.reactive.stateManager.state),state.capabilities.get("moveallcards").value||state.capabilities.get("moveassignedcards").value&&state.cards.get(this.id).assignees.includes(state.board.userid)?(this.draggable=!0,this.dragdrop.setDraggable(!0)):(this.draggable=!1,this.dragdrop.setDraggable(!1))}validateDropData(dropdata){return"card"==(null==dropdata?void 0:dropdata.type)}drop(dropdata){if(dropdata.id!=this.id){let newcolumn=this.getElement(_selectors.default.ADDCARD,this.id).dataset.columnid,aftercard=this.id;this.reactive.dispatch("moveCard",dropdata.id,newcolumn,aftercard)}}_unassignSelf(event){let target=event.target.closest(_selectors.default.UNASSIGNSELF),data=Object.assign({},target.dataset);this.reactive.dispatch("unassignUser",data.id)}_editDetails(event){event.preventDefault();const modalForm=new _modalform.default({formClass:"mod_kanban\\form\\edit_card_form",args:{id:this.id,kanban_board:this.boardid,cmid:this.cmid},modalConfig:{title:(0,_str.get_string)("editcard","mod_kanban")},returnFocus:this.getElement()});this.addEventListener(modalForm,modalForm.events.FORM_SUBMITTED,this._updateCard),modalForm.show()}_updateCard(event){this.reactive.dispatch("processUpdates",event.detail)}updateRelativeTime(timestamp){let elapsed=new Date(timestamp)-new Date;for(var u in this._units)if(Math.abs(elapsed)>this._units[u]||"second"==u)return this.rtf.format(Math.round(elapsed/this._units[u]),u);return""}_dueDateFormat(){let duedate=1e3*this.getElement(_selectors.default.DUEDATE).dataset.date;if(duedate>0){let element=this.getElement(_selectors.default.DUEDATE);element.innerHTML=this.updateRelativeTime(duedate),duedate<(new Date).getTime()?element.classList.add("mod_kanban_overdue"):element.classList.remove("mod_kanban_overdue")}else this.getElement(_selectors.default.DUEDATE).innerHTML=""}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=card.min.js.map