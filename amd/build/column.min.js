define("mod_kanban/column",["exports","core/reactive","mod_kanban/selectors","mod_kanban/capabilities","mod_kanban/exporter","core/notification","core/str","core_form/modalform","mod_kanban/kanbancomponent","core/log"],(function(_exports,_reactive,_selectors,_capabilities,_exporter,_notification,Str,_modalform,_kanbancomponent,_log){function _getRequireWildcardCache(nodeInterop){if("function"!=typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop)}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_selectors=_interopRequireDefault(_selectors),_capabilities=_interopRequireDefault(_capabilities),_exporter=_interopRequireDefault(_exporter),Str=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!=typeof obj&&"function"!=typeof obj)return{default:obj};var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj))return cache.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj,cache&&cache.set(obj,newObj);return newObj}(Str),_modalform=_interopRequireDefault(_modalform),_kanbancomponent=_interopRequireDefault(_kanbancomponent),_log=_interopRequireDefault(_log);class _default extends _kanbancomponent.default{static init(target){return new this({element:document.getElementById(target)})}create(){this.id=this.element.dataset.id}getWatchers(){return[{watch:`columns[${this.id}]:updated`,handler:this._columnUpdated},{watch:`columns[${this.id}]:deleted`,handler:this._columnDeleted},{watch:"cards:created",handler:this._cardCreated}]}stateReady(state){this.addEventListener(this.getElement(_selectors.default.DELETECOLUMN,this.id),"click",this._removeConfirm),this.addEventListener(this.getElement(_selectors.default.ADDCARDFIRST),"click",this._addCard),this.addEventListener(this.getElement(_selectors.default.ADDCOLUMN,this.id),"click",this._addColumn),this.addEventListener(this.getElement(_selectors.default.LOCKCOLUMN,this.id),"click",this._lockColumn),this.addEventListener(this.getElement(_selectors.default.UNLOCKCOLUMN,this.id),"click",this._unlockColumn),this.addEventListener(this.getElement(_selectors.default.EDITDETAILS,this.id),"click",this._editDetails),this.addEventListener(this.getElement(_selectors.default.SHOWHIDDEN),"click",this._showHidden),this.addEventListener(this.getElement(_selectors.default.HIDEHIDDEN),"click",this._hideHidden),this.draggable=!1,this.dragdrop=new _reactive.DragDrop(this),this.checkDragging(state),this.boardid=state.board.id,this.cmid=state.common.id}_removeConfirm(event){Str.get_strings([{key:"deletecolumn",component:"mod_kanban"},{key:"deletecolumnconfirm",component:"mod_kanban"},{key:"delete",component:"core"}]).then((strings=>(0,_notification.saveCancel)(strings[0],strings[1],strings[2],(()=>{this._removeColumn(event)})))).catch((error=>_log.default.debug(error)))}destroy(){void 0!==this.dragdrop&&this.dragdrop.unregister()}getDraggableData(){return{id:this.id,type:"column"}}checkDragging(state){void 0===state&&(state=this.reactive.stateManager.state),state.capabilities.get(_capabilities.default.MANAGECOLUMNS).value&&0==state.columns.get(this.id).locked?this.dragdrop.setDraggable(!0):this.dragdrop.setDraggable(!1)}validateDropData(dropdata){let type=null==dropdata?void 0:dropdata.type;return"card"==type||"column"==type}drop(dropdata,event){if("card"==dropdata.type){let cards=this.getElements(_selectors.default.CARD),aftercard=0;for(let i=0;i<cards.length;i++)cards[i].offsetTop+cards[i].clientHeight/2<=event.layerY&&(aftercard=cards[i].dataset.id);this.reactive.dispatch("moveCard",dropdata.id,this.id,aftercard)}"column"==dropdata.type&&dropdata.id!=this.id&&this.reactive.dispatch("moveColumn",dropdata.id,this.id)}showDropZone(dropdata,event){if("card"==dropdata.type){let cards=this.getElements(_selectors.default.CARD),aftercard=0;for(let i=0;i<cards.length;i++)cards[i].offsetTop+cards[i].clientHeight/2<=event.layerY&&(aftercard=cards[i].dataset.id);0==aftercard?this.getElement(_selectors.default.ADDCARDCONTAINER).classList.add("mod_kanban_insert"):this.getElement(_selectors.default.ADDCARDCONTAINER,aftercard).classList.add("mod_kanban_insert")}"column"==dropdata.type&&this.getElement(_selectors.default.ADDCOLUMNCONTAINER).classList.add("mod_kanban_insert")}hideDropZone(){this.getElement(_selectors.default.ADDCOLUMNCONTAINER).classList.remove("mod_kanban_insert"),this.getElements(_selectors.default.ADDCARDCONTAINER).forEach((e=>{e.classList.remove("mod_kanban_insert")}))}_addColumn(event){document.activeElement.blur();let target=event.target.closest(_selectors.default.ADDCOLUMN),data=Object.assign({},target.dataset);this.reactive.dispatch("addColumn",data.id)}async _cardCreated(_ref){let{element:element}=_ref;if(element.kanban_column==this.id){let data=JSON.parse(JSON.stringify(element));Object.assign(data,_exporter.default.exportCapabilities(this.reactive.state));let placeholder=document.createElement("li");placeholder.setAttribute("data-id",data.id);let node=this.getElement(_selectors.default.COLUMNINNER,this.id);node.appendChild(placeholder);const newelement=(await this.renderComponent(placeholder,"mod_kanban/card",data)).getElement();node.replaceChild(newelement,placeholder)}}_addCard(event){document.activeElement.blur();let target=event.target.closest(_selectors.default.ADDCARD),data=Object.assign({},target.dataset);this.reactive.dispatch("addCard",data.columnid,0)}_columnUpdated(_ref2){let{element:element}=_ref2;const el=this.getElement(_selectors.default.COLUMNINNER,this.id);if(void 0!==element.sequence){let sequence=element.sequence.split(",");[...el.children].forEach((node=>{node.classList.contains("mod_kanban_card")&&!sequence.includes(node.dataset.id)&&el.removeChild(node)})),[...el.children].sort(((a,b)=>sequence.indexOf(a.dataset.id)>sequence.indexOf(b.dataset.id)?1:-1)).forEach((node=>el.appendChild(node)))}if(void 0!==element.locked&&(this.toggleClass(0!=element.locked,"mod_kanban_locked_column"),0!=element.locked?this.getElement(_selectors.default.INPLACEEDITABLE).removeAttribute("data-inplaceeditable"):this.getElement(_selectors.default.INPLACEEDITABLE).setAttribute("data-inplaceeditable","1")),void 0!==element.title){let doc=(new DOMParser).parseFromString(element.title,"text/html");this.getElement(_selectors.default.INPLACEEDITABLE).setAttribute("data-value",doc.documentElement.textContent),this.getElement(_selectors.default.INPLACEEDITABLE).querySelector("a").innerHTML=element.title}if(void 0!==element.options){let options=JSON.parse(element.options);void 0===options.autohide?this.toggleClass(!1,"mod_kanban_autohide"):this.toggleClass(!0,"mod_kanban_autohide"),void 0===options.colbackground?this.getElement().removeAttribute("style"):this.getElement().setAttribute("style","background-color: "+options.colbackground)}this.checkDragging()}_columnDeleted(){this.destroy()}_removeColumn(event){let target=event.target.closest(_selectors.default.DELETECOLUMN),data=Object.assign({},target.dataset);this.reactive.dispatch("deleteColumn",data.id)}_lockColumn(event){let target=event.target.closest(_selectors.default.LOCKCOLUMN),data=Object.assign({},target.dataset);this.reactive.dispatch("lockColumn",data.id)}_unlockColumn(event){let target=event.target.closest(_selectors.default.UNLOCKCOLUMN),data=Object.assign({},target.dataset);this.reactive.dispatch("unlockColumn",data.id)}_editDetails(event){event.preventDefault();const modalForm=new _modalform.default({formClass:"mod_kanban\\form\\edit_column_form",args:{id:this.id,boardid:this.boardid,cmid:this.cmid},modalConfig:{title:(0,Str.get_string)("editcolumn","mod_kanban")},returnFocus:this.getElement()});this.addEventListener(modalForm,modalForm.events.FORM_SUBMITTED,this._updateColumn),modalForm.show()}_updateColumn(event){this.reactive.dispatch("processUpdates",event.detail)}_showHidden(){this.getElement().classList.add("mod_kanban_show_hidden")}_hideHidden(){this.getElement().classList.remove("mod_kanban_show_hidden")}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=column.min.js.map