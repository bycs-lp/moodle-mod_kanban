define("mod_kanban/board",["exports","core/reactive","mod_kanban/selectors","mod_kanban/exporter","mod_kanban/kanbancomponent"],(function(_exports,_reactive,_selectors,_exporter,_kanbancomponent){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_selectors=_interopRequireDefault(_selectors),_exporter=_interopRequireDefault(_exporter),_kanbancomponent=_interopRequireDefault(_kanbancomponent);class _default extends _kanbancomponent.default{constructor(){super(...arguments),_defineProperty(this,"LOCKED_COLUMNS",1),_defineProperty(this,"LOCKED_COMPLETE",2)}static init(target){return new this({element:document.getElementById(target)})}create(){this.cmid=this.element.dataset.cmid,this.id=this.element.dataset.id}getWatchers(){return[{watch:"board:updated",handler:this._boardUpdated},{watch:"columns:created",handler:this._createColumn}]}async stateReady(){this.addEventListener(this.getElement(_selectors.default.ADDCOLUMNFIRST),"click",this._addColumn),this.addEventListener(this.getElement(_selectors.default.LOCKBOARDCOLUMNS),"click",this._lockColumns),this.addEventListener(this.getElement(_selectors.default.UNLOCKBOARDCOLUMNS),"click",this._unlockColumns),this.dragdrop=new _reactive.DragDrop(this),this._continuousUpdate()}_continuousUpdate(){setInterval((()=>{this.reactive.dispatch("getUpdates")}),1e4)}destroy(){void 0!==this.dragdrop&&this.dragdrop.unregister()}_boardUpdated(_ref){let{element:element}=_ref;const colcontainer=this.getElement(_selectors.default.COLUMNCONTAINER);if(void 0!==element.sequence){let sequence=element.sequence.split(",");[...colcontainer.children].forEach((node=>{node.classList.contains("mod_kanban_column")&&!sequence.includes(node.dataset.id)&&colcontainer.removeChild(node)})),[...colcontainer.children].sort(((a,b)=>sequence.indexOf(a.dataset.id)>sequence.indexOf(b.dataset.id)?1:-1)).forEach((node=>colcontainer.appendChild(node)))}this.toggleClass(element.locked,"mod_kanban_board_locked_columns")}async _createColumn(_ref2){let{element:element}=_ref2,data=Object.assign({id:element.id,title:element.title,options:element.options,sequence:element.sequence},_exporter.default.exportCapabilities(this.reactive.state)),placeholder=document.createElement("li");placeholder.setAttribute("data-id",data.id),this.getElement(_selectors.default.COLUMNCONTAINER).appendChild(placeholder);const newelement=(await this.renderComponent(placeholder,"mod_kanban/column",data)).getElement();this.getElement(_selectors.default.COLUMNCONTAINER).replaceChild(newelement,placeholder),void 0!==element.highlight&&element.highlight&&(newelement.classList.add("mod_kanban_updated"),setTimeout((()=>this.newelement.classList.remove("mod_kanban_updated")),3e3))}_addColumn(){this.reactive.dispatch("addColumn",0)}_lockColumns(){this.reactive.dispatch("lockColumns")}_unlockColumns(){this.reactive.dispatch("unlockColumns")}validateDropData(dropdata){return"column"==(null==dropdata?void 0:dropdata.type)}drop(dropdata){this.reactive.dispatch("moveColumn",dropdata.id,0)}showDropZone(){this.getElement(_selectors.default.ADDCOLUMNCONTAINER).classList.add("mod_kanban_insert")}hideDropZone(){this.getElement(_selectors.default.ADDCOLUMNCONTAINER).classList.remove("mod_kanban_insert")}}return _exports.default=_default,_exports.default}));

//# sourceMappingURL=board.min.js.map