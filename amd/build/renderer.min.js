define("mod_kanban/renderer",["exports","core/ajax","core/log","core/pending","core/templates","core/notification","mod_kanban/board","mod_kanban/interface","core/sortable_list"],(function(_exports,_ajax,_log,_pending,_templates,_notification,_board,_interface,_sortable_list){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * Renderer module
   *
   * @module     mod_kanban/renderer
   * @copyright  2023 ISB Bayern
   * @author     Stefan Hanauska
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.selectors=_exports.init=_exports.getDataAndUpdate=void 0,_ajax=_interopRequireDefault(_ajax),_log=_interopRequireDefault(_log),_pending=_interopRequireDefault(_pending),_templates=_interopRequireDefault(_templates),_board=_interopRequireDefault(_board),_interface=_interopRequireDefault(_interface),_sortable_list=_interopRequireDefault(_sortable_list);const selectors={KANBAN_CONTAINER_PREFIX:"mod_kanban_render_container-"};_exports.selectors=selectors;_exports.init=(cmid,boardid)=>{const rendererPendingPromise=new _pending.default(selectors.KANBAN_CONTAINER_PREFIX+cmid);var boardState=new _board.default(cmid,boardid);getDataAndUpdate(boardState),rendererPendingPromise.resolve()};const getDataAndUpdate=boardState=>{_ajax.default.call([{methodname:"mod_kanban_get_kanban_content",args:{cmid:boardState.cmid,boardid:boardState.boardid,timestamp:boardState.timestamp}}])[0].then((data=>(boardState.updateBoard(data.board),boardState.updateColumns(data.columns),boardState.updateCards(data.cards),boardState.updateUsers(data.users),boardState.timestamp=data.timestamp,function(boardState){let context=boardState.exportForTemplate();_templates.default.renderForPromise("mod_kanban/board",context).then((_ref=>{let{html:html,js:js}=_ref,node=document.getElementById(selectors.KANBAN_CONTAINER_PREFIX+boardState.cmid);return _templates.default.replaceNodeContents(node,html,js),_templates.default.runTemplateJS(js),function(boardInterface){document.querySelectorAll("#"+selectors.KANBAN_CONTAINER_PREFIX+boardInterface.boardState.cmid+" *[data-action]").forEach((element=>{element.addEventListener("click",(evt=>{evt.preventDefault();let data=Object.assign({},evt.target.closest("[data-action]").dataset),action=data.action;delete data.action,boardInterface.sendChange(action,data)}))})),document.querySelectorAll("ul.mod_kanban_board > li.mod_kanban_column").forEach((element=>{element.addEventListener(_sortable_list.default.EVENTS.DROP,(evt=>{evt.stopPropagation()}))})),document.querySelectorAll("ul.mod_kanban_column_inner > li.mod_kanban_card").forEach((element=>{element.addEventListener(_sortable_list.default.EVENTS.DROP,(evt=>{evt.stopPropagation()}))}))}(new _interface.default(boardState)),!0})).catch((ex=>(0,_notification.exception)(ex)))}(boardState),!0))).catch((error=>(_log.default.error(error),!1)))};_exports.getDataAndUpdate=getDataAndUpdate}));

//# sourceMappingURL=renderer.min.js.map