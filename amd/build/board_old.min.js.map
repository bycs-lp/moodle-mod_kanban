{"version":3,"file":"board_old.min.js","sources":["../src/board_old.js"],"sourcesContent":["export default class Board {\n    timestamp = 0;\n    constructor(cmid, boardid) {\n        this.cmid = cmid;\n        this.boardid = boardid;\n        this.board = [];\n        this.columns = [];\n        this.cards = [];\n        this.users = [];\n    }\n\n    updateBoard(board) {\n        if (board) {\n            this.board = board;\n        }\n    }\n\n    updateColumns(columns) {\n        columns.forEach((col) => {\n            this.columns[col.id] = col;\n            this.columns[col.id].kanban_column = col.id;\n        });\n    }\n\n    updateCards(cards) {\n        cards.forEach((card) => {\n            this.cards[card.id] = card;\n        });\n    }\n\n    updateUsers(users) {\n        users.forEach((user) => {\n            this.users[user.userid] = user;\n        });\n    }\n\n    exportForTemplate() {\n        let columnOrder = this.board.sequence.split(',');\n        let columns = [];\n        let hascolumns = this.board.sequence != '';\n        if (hascolumns) {\n            columns = columnOrder.map((value) => {\n                let col = this.columns[value];\n                col.hascards = col.sequence != '';\n                if (col.hascards) {\n                    let cardOrder = col.sequence.split(',');\n                    col.cards = cardOrder.map((value) => {\n                        let card = this.cards[value];\n                        card.hasassignees = card.assignees.length > 0;\n                        if (card.hasassignees && typeof card.assignees[0] == 'number') {\n                            card.assignees = card.assignees.map((userid) => {\n                                return this.users[userid];\n                            });\n                        }\n                        return card;\n                    });\n                }\n                return col;\n            });\n        }\n        return {\n            cmid: this.cmid,\n            boardid: this.board.id,\n            sequence: this.board.sequence,\n            hascolumns: hascolumns,\n            columns: columns\n        };\n    }\n}"],"names":["constructor","cmid","boardid","board","columns","cards","users","updateBoard","updateColumns","forEach","col","id","kanban_column","updateCards","card","updateUsers","user","userid","exportForTemplate","columnOrder","this","sequence","split","hascolumns","map","value","hascards","cardOrder","hasassignees","assignees","length"],"mappings":"4KAEIA,YAAYC,KAAMC,iCADN,2IAEHD,KAAOA,UACPC,QAAUA,aACVC,MAAQ,QACRC,QAAU,QACVC,MAAQ,QACRC,MAAQ,GAGjBC,YAAYJ,OACJA,aACKA,MAAQA,OAIrBK,cAAcJ,SACVA,QAAQK,SAASC,WACRN,QAAQM,IAAIC,IAAMD,SAClBN,QAAQM,IAAIC,IAAIC,cAAgBF,IAAIC,MAIjDE,YAAYR,OACRA,MAAMI,SAASK,YACNT,MAAMS,KAAKH,IAAMG,QAI9BC,YAAYT,OACRA,MAAMG,SAASO,YACNV,MAAMU,KAAKC,QAAUD,QAIlCE,wBACQC,YAAcC,KAAKjB,MAAMkB,SAASC,MAAM,KACxClB,QAAU,GACVmB,WAAoC,IAAvBH,KAAKjB,MAAMkB,gBACxBE,aACAnB,QAAUe,YAAYK,KAAKC,YACnBf,IAAMU,KAAKhB,QAAQqB,UACvBf,IAAIgB,SAA2B,IAAhBhB,IAAIW,SACfX,IAAIgB,SAAU,KACVC,UAAYjB,IAAIW,SAASC,MAAM,KACnCZ,IAAIL,MAAQsB,UAAUH,KAAKC,YACnBX,KAAOM,KAAKf,MAAMoB,cACtBX,KAAKc,aAAed,KAAKe,UAAUC,OAAS,EACxChB,KAAKc,cAA4C,iBAArBd,KAAKe,UAAU,KAC3Cf,KAAKe,UAAYf,KAAKe,UAAUL,KAAKP,QAC1BG,KAAKd,MAAMW,WAGnBH,eAGRJ,QAGR,CACHT,KAAMmB,KAAKnB,KACXC,QAASkB,KAAKjB,MAAMQ,GACpBU,SAAUD,KAAKjB,MAAMkB,SACrBE,WAAYA,WACZnB,QAASA"}