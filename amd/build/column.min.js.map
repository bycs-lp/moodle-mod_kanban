{"version":3,"file":"column.min.js","sources":["../src/column.js"],"sourcesContent":["import {BaseComponent, DragDrop} from 'core/reactive';\nimport selectors from 'mod_kanban/selectors';\nimport exporter from 'mod_kanban/exporter';\n\n/**\n * Component representing a column in a kanban board.\n */\nexport default class extends BaseComponent {\n    /**\n     * Function to initialize component, called by mustache template.\n     * @param {*} target The id of the HTMLElement to attach to\n     * @returns {BaseComponent} New component attached to the HTMLElement represented by target\n     */\n    static init(target) {\n        let element = document.getElementById(target);\n        return new this({\n            element: element,\n        });\n    }\n\n    /**\n     * Called after the component was created.\n     */\n    create() {\n        this.id = this.element.dataset.id;\n    }\n\n    /**\n     * Watchers for this component.\n     * @returns {array}\n     */\n    getWatchers() {\n        return [\n            {watch: `columns[${this.id}]:updated`, handler: this._columnUpdated},\n            {watch: `columns[${this.id}]:deleted`, handler: this._columnDeleted},\n            {watch: `cards:created`, handler: this._cardCreated}\n        ];\n    }\n\n    /**\n     * Called once when state is ready, attaching event listeners and initializing drag and drop.\n     */\n    stateReady() {\n        this.addEventListener(\n            this.getElement(selectors.DELETECOLUMN, this.id),\n            'click',\n            this._removeColumn\n        );\n        this.addEventListener(\n            this.getElement(selectors.ADDCARDFIRST),\n            'click',\n            this._addCard\n        );\n        this.addEventListener(\n            this.getElement(selectors.ADDCOLUMN, this.id),\n            'click',\n            this._addColumn\n        );\n        this.dragdrop = new DragDrop(this);\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    /**\n     * Get the draggable data of this component.\n     *\n     * @returns {Object} the draggable data.\n     */\n    getDraggableData() {\n        return {id: this.id, type: 'column'};\n    }\n\n    /**\n     * Validate draggable data.\n     * @param {object} dropdata\n     * @returns {boolean} if the data is valid for this drop-zone.\n     */\n    validateDropData(dropdata) {\n        let type = dropdata?.type;\n        return type == 'card' || type == 'column';\n    }\n\n    /**\n     * Executed when a valid dropdata is dropped over the drop-zone.\n     * @param {object} dropdata\n     */\n    drop(dropdata) {\n        if (dropdata.type == 'card') {\n            this.reactive.dispatch('moveCard', dropdata.id, this.id, 0);\n        }\n        if (dropdata.type == 'column') {\n            if (dropdata.id != this.id) {\n                this.reactive.dispatch('moveColumn', dropdata.id, this.id);\n            }\n        }\n    }\n\n    /**\n     * Optional method to show some visual hints to the user.\n     */\n    showDropZone() {\n        this.element.classList.add('mod_kanban_dropzone');\n    }\n\n    /**\n     * Optional method to remove visual hints to the user.\n     */\n    hideDropZone() {\n        this.element.classList.remove('mod_kanban_dropzone');\n    }\n\n    /**\n     * Dispatch event to add a column after this column.\n     * @param {*} event\n     */\n    _addColumn(event) {\n        let target = event.target.closest(selectors.ADDCOLUMN);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('addColumn', data.id);\n    }\n\n    /**\n     * Called when a card was created in this column.\n     * @param {*} param0\n     */\n    async _cardCreated({element}) {\n        if (element.kanban_column == this.id) {\n            let data = Object.assign({\n                id: element.id,\n                title: element.title,\n                options: element.options,\n                // eslint-disable-next-line\n                kanban_column: element.kanban_column,\n            }, exporter.exportCapabilities(this.reactive.state));\n            let placeholder = document.createElement('li');\n            placeholder.setAttribute('data-id', data.id);\n            let node = this.getElement(selectors.COLUMNINNER, this.id);\n            node.appendChild(placeholder);\n            const newcomponent = await this.renderComponent(placeholder, 'mod_kanban/card', data);\n            const newelement = newcomponent.getElement();\n            node.replaceChild(newelement, placeholder);\n        }\n    }\n\n    /**\n     * Dispatch event to add a card in this column.\n     * @param {*} event\n     */\n    _addCard(event) {\n        let target = event.target.closest(selectors.ADDCARD);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('addCard', data.columnid, 0);\n    }\n\n    /**\n     * Called when column is updated.\n     * @param {*} param0\n     */\n    _columnUpdated({element}) {\n        const el = this.getElement(selectors.COLUMNINNER, this.id);\n        let sequence = element.sequence.split(',');\n        [...el.children]\n        .sort((a, b)=>sequence.indexOf(a.dataset.id) > sequence.indexOf(b.dataset.id) ? 1 : -1)\n        .forEach(node=>el.appendChild(node));\n    }\n\n    /**\n     * Called when this column is deleted.\n     */\n    _columnDeleted() {\n        const el = this.getElement();\n        el.parentNode.removeChild(el);\n        this.destroy();\n    }\n\n    /**\n     * Dispatch event to remove this column.\n     * @param {*} event\n     */\n    _removeColumn(event) {\n        let target = event.target.closest('[data-action=\"delete_column\"]');\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('deleteColumn', data.id);\n    }\n}"],"names":["BaseComponent","target","this","element","document","getElementById","create","id","dataset","getWatchers","watch","handler","_columnUpdated","_columnDeleted","_cardCreated","stateReady","addEventListener","getElement","selectors","DELETECOLUMN","_removeColumn","ADDCARDFIRST","_addCard","ADDCOLUMN","_addColumn","dragdrop","DragDrop","destroy","undefined","unregister","getDraggableData","type","validateDropData","dropdata","drop","reactive","dispatch","showDropZone","classList","add","hideDropZone","remove","event","closest","data","Object","assign","kanban_column","title","options","exporter","exportCapabilities","state","placeholder","createElement","setAttribute","node","COLUMNINNER","appendChild","newelement","renderComponent","replaceChild","ADDCARD","columnid","el","sequence","split","children","sort","a","b","indexOf","forEach","parentNode","removeChild"],"mappings":"0aAO6BA,oCAMbC,eAED,IAAIC,KAAK,CACZC,QAFUC,SAASC,eAAeJ,UAS1CK,cACSC,GAAKL,KAAKC,QAAQK,QAAQD,GAOnCE,oBACW,CACH,CAACC,wBAAkBR,KAAKK,gBAAeI,QAAST,KAAKU,gBACrD,CAACF,wBAAkBR,KAAKK,gBAAeI,QAAST,KAAKW,gBACrD,CAACH,sBAAwBC,QAAST,KAAKY,eAO/CC,kBACSC,iBACDd,KAAKe,WAAWC,mBAAUC,aAAcjB,KAAKK,IAC7C,QACAL,KAAKkB,oBAEJJ,iBACDd,KAAKe,WAAWC,mBAAUG,cAC1B,QACAnB,KAAKoB,eAEJN,iBACDd,KAAKe,WAAWC,mBAAUK,UAAWrB,KAAKK,IAC1C,QACAL,KAAKsB,iBAEJC,SAAW,IAAIC,mBAASxB,MAMjCyB,eAC0BC,IAAlB1B,KAAKuB,eACAA,SAASI,aAStBC,yBACW,CAACvB,GAAIL,KAAKK,GAAIwB,KAAM,UAQ/BC,iBAAiBC,cACTF,KAAOE,MAAAA,gBAAAA,SAAUF,WACN,QAARA,MAA0B,UAARA,KAO7BG,KAAKD,UACoB,QAAjBA,SAASF,WACJI,SAASC,SAAS,WAAYH,SAAS1B,GAAIL,KAAKK,GAAI,GAExC,UAAjB0B,SAASF,MACLE,SAAS1B,IAAML,KAAKK,SACf4B,SAASC,SAAS,aAAcH,SAAS1B,GAAIL,KAAKK,IAQnE8B,oBACSlC,QAAQmC,UAAUC,IAAI,uBAM/BC,oBACSrC,QAAQmC,UAAUG,OAAO,uBAOlCjB,WAAWkB,WACHzC,OAASyC,MAAMzC,OAAO0C,QAAQzB,mBAAUK,WACxCqB,KAAOC,OAAOC,OAAO,GAAI7C,OAAOO,cAC/B2B,SAASC,SAAS,YAAaQ,KAAKrC,iCAO1BJ,QAACA,iBACZA,QAAQ4C,eAAiB7C,KAAKK,GAAI,KAC9BqC,KAAOC,OAAOC,OAAO,CACrBvC,GAAIJ,QAAQI,GACZyC,MAAO7C,QAAQ6C,MACfC,QAAS9C,QAAQ8C,QAEjBF,cAAe5C,QAAQ4C,eACxBG,kBAASC,mBAAmBjD,KAAKiC,SAASiB,QACzCC,YAAcjD,SAASkD,cAAc,MACzCD,YAAYE,aAAa,UAAWX,KAAKrC,QACrCiD,KAAOtD,KAAKe,WAAWC,mBAAUuC,YAAavD,KAAKK,IACvDiD,KAAKE,YAAYL,mBAEXM,kBADqBzD,KAAK0D,gBAAgBP,YAAa,kBAAmBT,OAChD3B,aAChCuC,KAAKK,aAAaF,WAAYN,cAQtC/B,SAASoB,WACDzC,OAASyC,MAAMzC,OAAO0C,QAAQzB,mBAAU4C,SACxClB,KAAOC,OAAOC,OAAO,GAAI7C,OAAOO,cAC/B2B,SAASC,SAAS,UAAWQ,KAAKmB,SAAU,GAOrDnD,0BAAeT,QAACA,qBACN6D,GAAK9D,KAAKe,WAAWC,mBAAUuC,YAAavD,KAAKK,QACnD0D,SAAW9D,QAAQ8D,SAASC,MAAM,SAClCF,GAAGG,UACNC,MAAK,CAACC,EAAGC,IAAIL,SAASM,QAAQF,EAAE7D,QAAQD,IAAM0D,SAASM,QAAQD,EAAE9D,QAAQD,IAAM,GAAK,IACpFiE,SAAQhB,MAAMQ,GAAGN,YAAYF,QAMlC3C,uBACUmD,GAAK9D,KAAKe,aAChB+C,GAAGS,WAAWC,YAAYV,SACrBrC,UAOTP,cAAcsB,WACNzC,OAASyC,MAAMzC,OAAO0C,QAAQ,iCAC9BC,KAAOC,OAAOC,OAAO,GAAI7C,OAAOO,cAC/B2B,SAASC,SAAS,eAAgBQ,KAAKrC"}