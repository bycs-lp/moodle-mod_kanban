{"version":3,"file":"column.min.js","sources":["../src/column.js"],"sourcesContent":["import {BaseComponent, DragDrop} from 'core/reactive';\nimport selectors from 'mod_kanban/selectors';\nimport exporter from 'mod_kanban/exporter';\n\n/**\n * Component representing a column in a kanban board.\n */\nexport default class extends BaseComponent {\n    /**\n     * Function to initialize component, called by mustache template.\n     * @param {*} target The id of the HTMLElement to attach to\n     * @returns {BaseComponent} New component attached to the HTMLElement represented by target\n     */\n    static init(target) {\n        let element = document.getElementById(target);\n        return new this({\n            element: element,\n        });\n    }\n\n    /**\n     * Called after the component was created.\n     */\n    create() {\n        this.id = this.element.dataset.id;\n    }\n\n    /**\n     * Watchers for this component.\n     * @returns {array}\n     */\n    getWatchers() {\n        return [\n            {watch: `columns[${this.id}]:updated`, handler: this._columnUpdated},\n            {watch: `columns[${this.id}]:deleted`, handler: this._columnDeleted},\n            {watch: `cards:created`, handler: this._cardCreated}\n        ];\n    }\n\n    /**\n     * Called once when state is ready, attaching event listeners and initializing drag and drop.\n     */\n    stateReady() {\n        this.addEventListener(\n            this.getElement(selectors.DELETECOLUMN, this.id),\n            'click',\n            this._removeColumn\n        );\n        this.addEventListener(\n            this.getElement(selectors.ADDCARDFIRST),\n            'click',\n            this._addCard\n        );\n        this.addEventListener(\n            this.getElement(selectors.ADDCOLUMN, this.id),\n            'click',\n            this._addColumn\n        );\n        this.dragdrop = new DragDrop(this);\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n    }\n\n    /**\n     * Get the draggable data of this component.\n     *\n     * @returns {Object} the draggable data.\n     */\n    getDraggableData() {\n        return {id: this.id, type: 'column'};\n    }\n\n    /**\n     * Validate draggable data.\n     * @param {object} dropdata\n     * @returns {boolean} if the data is valid for this drop-zone.\n     */\n    validateDropData(dropdata) {\n        let type = dropdata?.type;\n        return type == 'card' || type == 'column';\n    }\n\n    /**\n     * Executed when a valid dropdata is dropped over the drop-zone.\n     * @param {object} dropdata\n     * @param {object} event\n     */\n    drop(dropdata, event) {\n        if (dropdata.type == 'card') {\n            let cards = this.getElements(selectors.CARD);\n            let aftercard = 0;\n            for (let i = 0; i < cards.length; i++) {\n                if (cards[i].offsetTop + cards[i].clientHeight / 2 <= event.layerY) {\n                    aftercard = cards[i].dataset.id;\n                }\n            }\n            this.reactive.dispatch('moveCard', dropdata.id, this.id, aftercard);\n        }\n        if (dropdata.type == 'column') {\n            if (dropdata.id != this.id) {\n                this.reactive.dispatch('moveColumn', dropdata.id, this.id);\n            }\n        }\n    }\n\n    /**\n     * Optional method to show some visual hints to the user.\n     * @param {object} dropdata\n     * @param {object} event\n     */\n    showDropZone(dropdata, event) {\n        let cards = this.getElements(selectors.CARD);\n        let aftercard = 0;\n        for (let i = 0; i < cards.length; i++) {\n            if (cards[i].offsetTop + cards[i].clientHeight / 2 <= event.layerY) {\n                aftercard = cards[i].dataset.id;\n            }\n        }\n        if (aftercard == 0) {\n            this.getElement(selectors.ADDCARDCONTAINER).classList.add('mod_kanban_insert');\n        } else {\n            this.getElement(selectors.ADDCARDCONTAINER, aftercard).classList.add('mod_kanban_insert');\n        }\n    }\n\n    /**\n     * Optional method to remove visual hints to the user.\n     */\n    hideDropZone() {\n        let addcard = this.getElements(selectors.ADDCARDCONTAINER);\n        addcard.forEach((e) => {\n            e.classList.remove('mod_kanban_insert');\n        });\n    }\n\n    /**\n     * Dispatch event to add a column after this column.\n     * @param {*} event\n     */\n    _addColumn(event) {\n        let target = event.target.closest(selectors.ADDCOLUMN);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('addColumn', data.id);\n    }\n\n    /**\n     * Called when a card was created in this column.\n     * @param {*} param0\n     */\n    async _cardCreated({element}) {\n        if (element.kanban_column == this.id) {\n            let data = Object.assign({\n                id: element.id,\n                title: element.title,\n                options: element.options,\n                // eslint-disable-next-line\n                kanban_column: element.kanban_column,\n            }, exporter.exportCapabilities(this.reactive.state));\n            let placeholder = document.createElement('li');\n            placeholder.setAttribute('data-id', data.id);\n            let node = this.getElement(selectors.COLUMNINNER, this.id);\n            node.appendChild(placeholder);\n            const newcomponent = await this.renderComponent(placeholder, 'mod_kanban/card', data);\n            const newelement = newcomponent.getElement();\n            node.replaceChild(newelement, placeholder);\n        }\n    }\n\n    /**\n     * Dispatch event to add a card in this column.\n     * @param {*} event\n     */\n    _addCard(event) {\n        let target = event.target.closest(selectors.ADDCARD);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('addCard', data.columnid, 0);\n    }\n\n    /**\n     * Called when column is updated.\n     * @param {*} param0\n     */\n    _columnUpdated({element}) {\n        const el = this.getElement(selectors.COLUMNINNER, this.id);\n        let sequence = element.sequence.split(',');\n        [...el.children]\n        .sort((a, b)=>sequence.indexOf(a.dataset.id) > sequence.indexOf(b.dataset.id) ? 1 : -1)\n        .forEach(node=>el.appendChild(node));\n    }\n\n    /**\n     * Called when this column is deleted.\n     */\n    _columnDeleted() {\n        const el = this.getElement();\n        el.parentNode.removeChild(el);\n        this.destroy();\n    }\n\n    /**\n     * Dispatch event to remove this column.\n     * @param {*} event\n     */\n    _removeColumn(event) {\n        let target = event.target.closest('[data-action=\"delete_column\"]');\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('deleteColumn', data.id);\n    }\n}"],"names":["BaseComponent","target","this","element","document","getElementById","create","id","dataset","getWatchers","watch","handler","_columnUpdated","_columnDeleted","_cardCreated","stateReady","addEventListener","getElement","selectors","DELETECOLUMN","_removeColumn","ADDCARDFIRST","_addCard","ADDCOLUMN","_addColumn","dragdrop","DragDrop","destroy","undefined","unregister","getDraggableData","type","validateDropData","dropdata","drop","event","cards","getElements","CARD","aftercard","i","length","offsetTop","clientHeight","layerY","reactive","dispatch","showDropZone","ADDCARDCONTAINER","classList","add","hideDropZone","forEach","e","remove","closest","data","Object","assign","kanban_column","title","options","exporter","exportCapabilities","state","placeholder","createElement","setAttribute","node","COLUMNINNER","appendChild","newelement","renderComponent","replaceChild","ADDCARD","columnid","el","sequence","split","children","sort","a","b","indexOf","parentNode","removeChild"],"mappings":"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"}