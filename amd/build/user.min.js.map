{"version":3,"file":"user.min.js","sources":["../src/user.js"],"sourcesContent":["import {BaseComponent} from 'core/reactive';\nimport selectors from 'mod_kanban/selectors';\n/**\n * Component representing an assigned user.\n */\nexport default class extends BaseComponent {\n    /**\n     * Function to initialize component, called by mustache template.\n     * @param {*} target The id of the HTMLElement to attach to\n     * @returns {BaseComponent} New component attached to the HTMLElement represented by target\n     */\n    static init(target) {\n        let element = document.getElementById(target);\n        return new this({\n            element: element,\n        });\n    }\n    /**\n     * Called after the component was created.\n     */\n    create() {\n        this.id = this.element.dataset.id;\n        this.userid = this.element.dataset.userid;\n    }\n    /**\n     * Watchers for this component.\n     * @returns {array} All watchers for this component\n     */\n    getWatchers() {\n        return [\n            {watch: `cards[${this.id}]:deleted`, handler: this._cardDeleted},\n        ];\n    }\n    /**\n     * Called once when state is ready, attaching event listeners.\n     * @param {*} state\n     */\n    stateReady(state) {\n        if ((state.capabilities.get('assignself') && this.userid == state.board.userid) || state.capabilities.get('assignothers')) {\n            this.addEventListener(\n                this.getElement(),\n                'click',\n                this._unassignUser\n            );\n        }\n    }\n    /**\n     * Dispatch event to unassign a user.\n     * @param {*} event\n     */\n    _unassignUser(event) {\n        let target = event.target.closest(selectors.UNASSIGNUSER);\n        let data = Object.assign({}, target.dataset);\n        this.reactive.dispatch('unassignUser', data.id, data.userid);\n    }\n    /**\n     * Called when card is deleted.\n     */\n    _cardDeleted() {\n        this.destroy();\n    }\n}"],"names":["BaseComponent","target","this","element","document","getElementById","create","id","dataset","userid","getWatchers","watch","handler","_cardDeleted","stateReady","state","capabilities","get","board","addEventListener","getElement","_unassignUser","event","closest","selectors","UNASSIGNUSER","data","Object","assign","reactive","dispatch","destroy"],"mappings":"kSAK6BA,oCAMbC,eAED,IAAIC,KAAK,CACZC,QAFUC,SAASC,eAAeJ,UAQ1CK,cACSC,GAAKL,KAAKC,QAAQK,QAAQD,QAC1BE,OAASP,KAAKC,QAAQK,QAAQC,OAMvCC,oBACW,CACH,CAACC,sBAAgBT,KAAKK,gBAAeK,QAASV,KAAKW,eAO3DC,WAAWC,QACFA,MAAMC,aAAaC,IAAI,eAAiBf,KAAKO,QAAUM,MAAMG,MAAMT,QAAWM,MAAMC,aAAaC,IAAI,uBACjGE,iBACDjB,KAAKkB,aACL,QACAlB,KAAKmB,eAQjBA,cAAcC,WACNrB,OAASqB,MAAMrB,OAAOsB,QAAQC,mBAAUC,cACxCC,KAAOC,OAAOC,OAAO,GAAI3B,OAAOO,cAC/BqB,SAASC,SAAS,eAAgBJ,KAAKnB,GAAImB,KAAKjB,QAKzDI,oBACSkB"}