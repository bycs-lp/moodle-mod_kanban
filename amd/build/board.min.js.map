{"version":3,"file":"board.min.js","sources":["../src/board.js"],"sourcesContent":["import {BaseComponent} from 'core/reactive';\nimport selectors from 'mod_kanban/selectors';\nimport exporter from 'mod_kanban/exporter';\n/**\n * Component representing a kanban board.\n */\nexport default class extends BaseComponent {\n    static init(target) {\n        let element = document.getElementById(target);\n        return new this({\n            element: element,\n        });\n    }\n\n    create() {\n        this.cmid = this.element.dataset.cmid;\n        this.id = this.element.dataset.id;\n    }\n\n    getWatchers() {\n        return [\n            {watch: `board:updated`, handler: this._boardUpdated},\n            {watch: `columns:created`, handler: this._createColumn},\n        ];\n    }\n\n    async stateReady() {\n        this.addEventListener(\n            this.getElement(selectors.ADDCOLUMNFIRST),\n            'click',\n            this._addColumn\n        );\n    }\n\n    _boardUpdated({element}) {\n        const el = this.getElement();\n        let sequence = element.sequence.split(',');\n        [...el.children]\n        .sort((a, b)=>sequence.indexOf(a.dataset.id) > sequence.indexOf(b.dataset.id) ? 1 : -1)\n        .forEach(node=>el.appendChild(node));\n    }\n\n    async _createColumn({element}) {\n        let data = Object.assign({\n            id: element.id,\n            title: element.title,\n            options: element.options,\n            sequence: element.sequence,\n        }, exporter.exportCapabilities(this.reactive.state));\n        let placeholder = document.createElement('li');\n        placeholder.setAttribute('data-id', data.id);\n        this.getElement().appendChild(placeholder);\n        const newcomponent = await this.renderComponent(placeholder, 'mod_kanban/column', data);\n        const newelement = newcomponent.getElement();\n        this.getElement().replaceChild(newelement, placeholder);\n    }\n\n    _addColumn() {\n        this.reactive.dispatch('addColumn', 0);\n    }\n}"],"names":["BaseComponent","target","this","element","document","getElementById","create","cmid","dataset","id","getWatchers","watch","handler","_boardUpdated","_createColumn","addEventListener","getElement","selectors","ADDCOLUMNFIRST","_addColumn","el","sequence","split","children","sort","a","b","indexOf","forEach","node","appendChild","data","Object","assign","title","options","exporter","exportCapabilities","reactive","state","placeholder","createElement","setAttribute","newelement","renderComponent","replaceChild","dispatch"],"mappings":"yaAM6BA,oCACbC,eAED,IAAIC,KAAK,CACZC,QAFUC,SAASC,eAAeJ,UAM1CK,cACSC,KAAOL,KAAKC,QAAQK,QAAQD,UAC5BE,GAAKP,KAAKC,QAAQK,QAAQC,GAGnCC,oBACW,CACH,CAACC,sBAAwBC,QAASV,KAAKW,eACvC,CAACF,wBAA0BC,QAASV,KAAKY,wCAKxCC,iBACDb,KAAKc,WAAWC,mBAAUC,gBAC1B,QACAhB,KAAKiB,YAIbN,wBAAcV,QAACA,oBACLiB,GAAKlB,KAAKc,iBACZK,SAAWlB,QAAQkB,SAASC,MAAM,SAClCF,GAAGG,UACNC,MAAK,CAACC,EAAGC,IAAIL,SAASM,QAAQF,EAAEjB,QAAQC,IAAMY,SAASM,QAAQD,EAAElB,QAAQC,IAAM,GAAK,IACpFmB,SAAQC,MAAMT,GAAGU,YAAYD,uCAGd1B,QAACA,eACb4B,KAAOC,OAAOC,OAAO,CACrBxB,GAAIN,QAAQM,GACZyB,MAAO/B,QAAQ+B,MACfC,QAAShC,QAAQgC,QACjBd,SAAUlB,QAAQkB,UACnBe,kBAASC,mBAAmBnC,KAAKoC,SAASC,QACzCC,YAAcpC,SAASqC,cAAc,MACzCD,YAAYE,aAAa,UAAWX,KAAKtB,SACpCO,aAAac,YAAYU,mBAExBG,kBADqBzC,KAAK0C,gBAAgBJ,YAAa,oBAAqBT,OAClDf,kBAC3BA,aAAa6B,aAAaF,WAAYH,aAG/CrB,kBACSmB,SAASQ,SAAS,YAAa"}