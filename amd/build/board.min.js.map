{"version":3,"file":"board.min.js","sources":["../src/board.js"],"sourcesContent":["import {DragDrop} from 'core/reactive';\nimport selectors from 'mod_kanban/selectors';\nimport exporter from 'mod_kanban/exporter';\nimport KanbanComponent from 'mod_kanban/kanbancomponent';\nimport {saveCancel} from 'core/notification';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Component representing a kanban board.\n */\nexport default class extends KanbanComponent {\n    LOCKED_COLUMNS = 1;\n    LOCKED_COMPLETE = 2;\n\n    static init(target) {\n        let element = document.getElementById(target);\n        return new this({\n            element: element,\n        });\n    }\n\n    create() {\n        this.cmid = this.element.dataset.cmid;\n        this.id = this.element.dataset.id;\n    }\n\n    getWatchers() {\n        return [\n            {watch: `board:updated`, handler: this._boardUpdated},\n            {watch: `columns:created`, handler: this._createColumn},\n            {watch: `board:deleted`, handler: this._reload},\n            {watch: `common:updated`, handler: this._commonUpdated},\n        ];\n    }\n\n    async stateReady(state) {\n        this.addEventListener(\n            this.getElement(selectors.ADDCOLUMNFIRST),\n            'click',\n            this._addColumn\n        );\n        this.addEventListener(\n            this.getElement(selectors.LOCKBOARDCOLUMNS),\n            'click',\n            this._lockColumns\n        );\n        this.addEventListener(\n            this.getElement(selectors.UNLOCKBOARDCOLUMNS),\n            'click',\n            this._unlockColumns\n        );\n        this.addEventListener(\n            this.getElement(selectors.SAVEASTEMPLATE),\n            'click',\n            this._templateConfirm\n        );\n        this.addEventListener(\n            this.getElement(selectors.SHOWTEMPLATE),\n            'click',\n            this._showTemplate\n        );\n        this.addEventListener(\n            this.getElement(selectors.DELETEBOARD),\n            'click',\n            this._deleteConfirm\n        );\n        this.addEventListener(\n            this.getElement(selectors.DELETETEMPLATE),\n            'click',\n            this._deleteTemplateConfirm\n        );\n        this.addEventListener(\n            this.getElement(selectors.SHOWBOARD),\n            'click',\n            this._reload\n        );\n        this.dragdrop = new DragDrop(this);\n        if (state.common.liveupdate > 0) {\n            this._continuousUpdate(state.common.liveupdate);\n        }\n    }\n\n    _showTemplate() {\n        window.location.href =\n            M.cfg.wwwroot +\n            '/mod/kanban/view.php?id=' +\n            this.reactive.state.common.id +\n            '&boardid=' +\n            this.reactive.state.common.template;\n    }\n\n    _reload() {\n        window.location.replace(M.cfg.wwwroot + '/mod/kanban/view.php?id=' + this.reactive.state.common.id);\n    }\n\n    _continuousUpdate(seconds = 10) {\n        setInterval(() => {\n            this.reactive.dispatch('getUpdates');\n        }, seconds * 1000);\n    }\n\n    _commonUpdated({element}) {\n        this.toggleClass(element.template != 0, 'mod_kanban_hastemplate');\n    }\n\n    /**\n     * Remove all subcomponents dependencies.\n     */\n    destroy() {\n        if (this.dragdrop !== undefined) {\n            this.dragdrop.unregister();\n        }\n        this._reload();\n    }\n\n    /**\n     * Display confirmation modal for saving a board as template.\n     */\n    _templateConfirm() {\n        saveCancel(\n            getString('saveastemplate', 'mod_kanban'),\n            getString('saveastemplateconfirm', 'mod_kanban'),\n            getString('save', 'core'),\n            () => {\n                this._saveAsTemplate();\n            }\n        );\n    }\n\n    _saveAsTemplate() {\n        this.reactive.dispatch('saveAsTemplate');\n    }\n\n    /**\n     * Display confirmation modal for deleting a board.\n     */\n    _deleteConfirm() {\n        saveCancel(\n            getString('deleteboard', 'mod_kanban'),\n            getString('deleteboardconfirm', 'mod_kanban'),\n            getString('delete', 'core'),\n            () => {\n                this._deleteBoard();\n            }\n        );\n    }\n\n    /**\n     * Display confirmation modal for deleting a template.\n     */\n    _deleteTemplateConfirm() {\n        saveCancel(\n            getString('deletetemplate', 'mod_kanban'),\n            getString('deletetemplateconfirm', 'mod_kanban'),\n            getString('delete', 'core'),\n            () => {\n                this._deleteBoard();\n            }\n        );\n    }\n\n    _deleteBoard() {\n        this.reactive.dispatch('deleteBoard');\n    }\n\n    _boardUpdated({element}) {\n        const colcontainer = this.getElement(selectors.COLUMNCONTAINER);\n        if (element.sequence !== undefined) {\n            let sequence = element.sequence.split(',');\n            [...colcontainer.children]\n            .forEach((node) => {\n                if (node.classList.contains('mod_kanban_column') && !sequence.includes(node.dataset.id)) {\n                    colcontainer.removeChild(node);\n                }\n            });\n            [...colcontainer.children]\n            .sort((a, b)=>sequence.indexOf(a.dataset.id) > sequence.indexOf(b.dataset.id) ? 1 : -1)\n            .forEach(node=>colcontainer.appendChild(node));\n        }\n        this.toggleClass(element.locked, 'mod_kanban_board_locked_columns');\n        this.toggleClass(element.hastemplate, 'mod_kanban_hastemplate');\n    }\n\n    async _createColumn({element}) {\n        let data = Object.assign({\n            id: element.id,\n            title: element.title,\n            options: element.options,\n            sequence: element.sequence,\n        }, exporter.exportCapabilities(this.reactive.state));\n        let placeholder = document.createElement('li');\n        placeholder.setAttribute('data-id', data.id);\n        this.getElement(selectors.COLUMNCONTAINER).appendChild(placeholder);\n        const newcomponent = await this.renderComponent(placeholder, 'mod_kanban/column', data);\n        const newelement = newcomponent.getElement();\n        this.getElement(selectors.COLUMNCONTAINER).replaceChild(newelement, placeholder);\n        if (element.highlight !== undefined && element.highlight) {\n            newelement.classList.add('mod_kanban_updated');\n            setTimeout(() => this.newelement.classList.remove('mod_kanban_updated'), 3000);\n        }\n    }\n\n    _addColumn() {\n        this.reactive.dispatch('addColumn', 0);\n    }\n\n    _lockColumns() {\n        this.reactive.dispatch('lockColumns');\n    }\n\n    _unlockColumns() {\n        this.reactive.dispatch('unlockColumns');\n    }\n\n    /**\n     * Validate draggable data.\n     * @param {object} dropdata\n     * @returns {boolean} if the data is valid for this drop-zone.\n     */\n    validateDropData(dropdata) {\n        let type = dropdata?.type;\n        return type == 'column';\n    }\n\n    /**\n     * Executed when a valid dropdata is dropped over the drop-zone.\n     * @param {object} dropdata\n     */\n    drop(dropdata) {\n        this.reactive.dispatch('moveColumn', dropdata.id, 0);\n    }\n\n    /**\n     * Optional method to show some visual hints to the user.\n     */\n    showDropZone() {\n        this.getElement(selectors.ADDCOLUMNCONTAINER).classList.add('mod_kanban_insert');\n    }\n\n    /**\n     * Optional method to remove visual hints to the user.\n     */\n    hideDropZone() {\n        this.getElement(selectors.ADDCOLUMNCONTAINER).classList.remove('mod_kanban_insert');\n    }\n}"],"names":["KanbanComponent","target","this","element","document","getElementById","create","cmid","dataset","id","getWatchers","watch","handler","_boardUpdated","_createColumn","_reload","_commonUpdated","state","addEventListener","getElement","selectors","ADDCOLUMNFIRST","_addColumn","LOCKBOARDCOLUMNS","_lockColumns","UNLOCKBOARDCOLUMNS","_unlockColumns","SAVEASTEMPLATE","_templateConfirm","SHOWTEMPLATE","_showTemplate","DELETEBOARD","_deleteConfirm","DELETETEMPLATE","_deleteTemplateConfirm","SHOWBOARD","dragdrop","DragDrop","common","liveupdate","_continuousUpdate","window","location","href","M","cfg","wwwroot","reactive","template","replace","setInterval","dispatch","toggleClass","destroy","undefined","unregister","_saveAsTemplate","_deleteBoard","colcontainer","COLUMNCONTAINER","sequence","split","children","forEach","node","classList","contains","includes","removeChild","sort","a","b","indexOf","appendChild","locked","hastemplate","data","Object","assign","title","options","exporter","exportCapabilities","placeholder","createElement","setAttribute","newelement","renderComponent","replaceChild","highlight","add","setTimeout","remove","validateDropData","dropdata","type","drop","showDropZone","ADDCOLUMNCONTAINER","hideDropZone"],"mappings":"uuBAU6BA,iGACR,0CACC,eAENC,eAED,IAAIC,KAAK,CACZC,QAFUC,SAASC,eAAeJ,UAM1CK,cACSC,KAAOL,KAAKC,QAAQK,QAAQD,UAC5BE,GAAKP,KAAKC,QAAQK,QAAQC,GAGnCC,oBACW,CACH,CAACC,sBAAwBC,QAASV,KAAKW,eACvC,CAACF,wBAA0BC,QAASV,KAAKY,eACzC,CAACH,sBAAwBC,QAASV,KAAKa,SACvC,CAACJ,uBAAyBC,QAASV,KAAKc,kCAI/BC,YACRC,iBACDhB,KAAKiB,WAAWC,mBAAUC,gBAC1B,QACAnB,KAAKoB,iBAEJJ,iBACDhB,KAAKiB,WAAWC,mBAAUG,kBAC1B,QACArB,KAAKsB,mBAEJN,iBACDhB,KAAKiB,WAAWC,mBAAUK,oBAC1B,QACAvB,KAAKwB,qBAEJR,iBACDhB,KAAKiB,WAAWC,mBAAUO,gBAC1B,QACAzB,KAAK0B,uBAEJV,iBACDhB,KAAKiB,WAAWC,mBAAUS,cAC1B,QACA3B,KAAK4B,oBAEJZ,iBACDhB,KAAKiB,WAAWC,mBAAUW,aAC1B,QACA7B,KAAK8B,qBAEJd,iBACDhB,KAAKiB,WAAWC,mBAAUa,gBAC1B,QACA/B,KAAKgC,6BAEJhB,iBACDhB,KAAKiB,WAAWC,mBAAUe,WAC1B,QACAjC,KAAKa,cAEJqB,SAAW,IAAIC,mBAASnC,MACzBe,MAAMqB,OAAOC,WAAa,QACrBC,kBAAkBvB,MAAMqB,OAAOC,YAI5CT,gBACIW,OAAOC,SAASC,KACZC,EAAEC,IAAIC,QACN,2BACA5C,KAAK6C,SAAS9B,MAAMqB,OAAO7B,GAC3B,YACAP,KAAK6C,SAAS9B,MAAMqB,OAAOU,SAGnCjC,UACI0B,OAAOC,SAASO,QAAQL,EAAEC,IAAIC,QAAU,2BAA6B5C,KAAK6C,SAAS9B,MAAMqB,OAAO7B,IAGpG+B,oBACIU,aAAY,UACHH,SAASI,SAAS,gBACd,4DAHW,KAM5BnC,yBAAeb,QAACA,mBACPiD,YAAgC,GAApBjD,QAAQ6C,SAAe,0BAM5CK,eAC0BC,IAAlBpD,KAAKkC,eACAA,SAASmB,kBAEbxC,UAMTa,iDAEQ,mBAAU,iBAAkB,eAC5B,mBAAU,wBAAyB,eACnC,mBAAU,OAAQ,SAClB,UACS4B,qBAKjBA,uBACST,SAASI,SAAS,kBAM3BnB,+CAEQ,mBAAU,cAAe,eACzB,mBAAU,qBAAsB,eAChC,mBAAU,SAAU,SACpB,UACSyB,kBAQjBvB,uDAEQ,mBAAU,iBAAkB,eAC5B,mBAAU,wBAAyB,eACnC,mBAAU,SAAU,SACpB,UACSuB,kBAKjBA,oBACSV,SAASI,SAAS,eAG3BtC,yBAAcV,QAACA,qBACLuD,aAAexD,KAAKiB,WAAWC,mBAAUuC,yBACtBL,IAArBnD,QAAQyD,SAAwB,KAC5BA,SAAWzD,QAAQyD,SAASC,MAAM,SAClCH,aAAaI,UAChBC,SAASC,OACFA,KAAKC,UAAUC,SAAS,uBAAyBN,SAASO,SAASH,KAAKxD,QAAQC,KAChFiD,aAAaU,YAAYJ,aAG7BN,aAAaI,UAChBO,MAAK,CAACC,EAAGC,IAAIX,SAASY,QAAQF,EAAE9D,QAAQC,IAAMmD,SAASY,QAAQD,EAAE/D,QAAQC,IAAM,GAAK,IACpFsD,SAAQC,MAAMN,aAAae,YAAYT,aAEvCZ,YAAYjD,QAAQuE,OAAQ,wCAC5BtB,YAAYjD,QAAQwE,YAAa,yDAGtBxE,QAACA,eACbyE,KAAOC,OAAOC,OAAO,CACrBrE,GAAIN,QAAQM,GACZsE,MAAO5E,QAAQ4E,MACfC,QAAS7E,QAAQ6E,QACjBpB,SAAUzD,QAAQyD,UACnBqB,kBAASC,mBAAmBhF,KAAK6C,SAAS9B,QACzCkE,YAAc/E,SAASgF,cAAc,MACzCD,YAAYE,aAAa,UAAWT,KAAKnE,SACpCU,WAAWC,mBAAUuC,iBAAiBc,YAAYU,mBAEjDG,kBADqBpF,KAAKqF,gBAAgBJ,YAAa,oBAAqBP,OAClDzD,kBAC3BA,WAAWC,mBAAUuC,iBAAiB6B,aAAaF,WAAYH,kBAC1C7B,IAAtBnD,QAAQsF,WAA2BtF,QAAQsF,YAC3CH,WAAWrB,UAAUyB,IAAI,sBACzBC,YAAW,IAAMzF,KAAKoF,WAAWrB,UAAU2B,OAAO,uBAAuB,MAIjFtE,kBACSyB,SAASI,SAAS,YAAa,GAGxC3B,oBACSuB,SAASI,SAAS,eAG3BzB,sBACSqB,SAASI,SAAS,iBAQ3B0C,iBAAiBC,gBAEE,WADJA,MAAAA,gBAAAA,SAAUC,MAQzBC,KAAKF,eACI/C,SAASI,SAAS,aAAc2C,SAASrF,GAAI,GAMtDwF,oBACS9E,WAAWC,mBAAU8E,oBAAoBjC,UAAUyB,IAAI,qBAMhES,oBACShF,WAAWC,mBAAU8E,oBAAoBjC,UAAU2B,OAAO"}